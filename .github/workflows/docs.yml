name: Build & Deploy Docs

on:
  push:
    branches: [ main ]
    paths:
      - "docs/**"
      - "mkdocs.yml"
      - "components/**"
      - "bases/**"
      - "projects/**"
      - "pyproject.toml"
      - "uv.lock"
  workflow_dispatch: {}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        run: pipx install uv

      - name: Sync dev deps
        run: uv sync --group dev

      # Ensure the code to be documented is importable for mkdocstrings.
      # Install your main meta-package (assembled via polylith) editably.
      - name: Install all projects (editable)
        shell: bash
        run: |
            set -euo pipefail
            mapfile -d '' PROJECTS < <(find projects -mindepth 2 -maxdepth 2 -type f -name pyproject.toml -print0 | sort -z)

            if [ ${#PROJECTS[@]} -eq 0 ]; then
            echo "::notice::No project pyproject.toml files found under ./projects/"
            exit 0
            fi

            for pj in "${PROJECTS[@]}"; do
            dir="$(dirname "$pj")"
            echo "::group::Installing $dir (editable)"
            # If a project fails to install, keep going but surface the warning:
            uv pip install -e "$dir" || echo "::warning::Editable install failed for $dir (continuing)"
            echo "::endgroup::"
            done

      - name: Build mkdocs site
        run: uv run mkdocs build --strict

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 